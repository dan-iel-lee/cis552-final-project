injl :: forall a b . a -> (forall r . (a -> r) -> (b -> r) -> r)
injl = \x -> \f -> \g -> f x ;

injr :: forall a b . b -> (forall r . (a -> r) -> (b -> r) -> r)
injr = \y -> \f -> \g -> g y ;


casee :: forall a b q . ((a -> q) -> (b -> q) -> q) -> (a -> q) -> (b -> q) -> q
casee = \s -> \f -> \g -> s f g ;

isTrue :: ((Int -> Bool) -> (Bool -> Bool) -> Bool) -> Bool
isTrue = \s -> casee s (\x -> x >= 1) (\b -> b) ;

exL :: forall r . (Int -> r) -> (Bool -> r) -> r
exL = injl 1 ;

isTrue exL